{"ast":null,"code":"import _slicedToArray from \"/Users/mauriceknecht/Desktop/ChatAppFinal/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mauriceknecht/Desktop/ChatAppFinal/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/ChatAppFinal/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,oBACLP,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACtBQ,IADsB;AAAA,QAChBC,OADgB;;AAAA,qBAELT,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAEtBU,IAFsB;AAAA,QAEhBC,OAFgB;;AAAA,qBAGCX,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGtBY,OAHsB;AAAA,QAGbC,UAHa;;AAAA,qBAIGb,QAAQ,CAAC,EAAD,CAJX;AAAA;AAAA,QAItBc,QAJsB;AAAA,QAIZC,WAJY;;AAK7B,QAAMC,QAAQ,GAAE,gBAAhB;AAGIf,EAAAA,SAAS,CAAC,MAAI;AAAA,+BACWC,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CADX;AAAA,UACHV,IADG,sBACHA,IADG;AAAA,UACGE,IADH,sBACGA,IADH;;AAGVL,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAACX,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB,EAAkC,MAAK,CAEtC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAJD;AAKH,GAjBQ,EAiBN,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAjBM,CAAT;AAmBAjB,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAY;AACjCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACC,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGZ,OAAH,EAAY;AACRP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GAND;;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEC;AACD,IAAA,KAAK,EAAEE,OADN;AAED,IAAA,QAAQ,EAAGW,KAAD,IAAUV,UAAU,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd,CAF7B;AAGD,IAAA,UAAU,EAAEL,KAAK,IAAIA,KAAK,CAACM,GAAN,KAAc,OAAd,GAAwBP,WAAW,CAACC,KAAD,CAAnC,GAA6C,IAHjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADJ,CADJ;AAYH,CAvDD;;AAyDA,eAAejB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\n\nlet socket;\n\nconst Chat = ({location}) => {\nconst [name, setName] = useState('');\nconst [room, setRoom] = useState('');\nconst [message, setMessage] = useState('');\nconst [messages, setMessages] = useState([]);\nconst ENDPOINT ='localhost:5000';\n\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n        \n        socket.emit('join', {name, room}, ()=> {\n            \n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ENDPOINT, location.search]);\n\n    useEffect(()=> {\n        socket.on('message', (message)=> {\n        setMessages([...messages, message]);\n        })\n    }, [messages]);\n \n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    console.log(message, messages);\n\n    return (\n        <div className='outerContainer'>\n            <div className='container'>\n              <InfoBar room={room} />  \n            {<input\n            value={message}\n            onChange={(event)=> setMessage(event.target.value)}\n            onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n            />}\n            </div>\n        </div>\n    )\n}\n\nexport default Chat "]},"metadata":{},"sourceType":"module"}