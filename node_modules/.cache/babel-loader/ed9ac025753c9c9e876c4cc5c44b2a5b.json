{"ast":null,"code":"import _toConsumableArray from\"/Users/mauriceknecht/Desktop/ChatAppFinal/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/mauriceknecht/Desktop/ChatAppFinal/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import queryString from'query-string';import io from'socket.io-client';import'./Chat.css';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';import TextContainer from'../TextContainer/TextContainer';var socket;var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),users=_useState10[0],setUsers=_useState10[1];var ENDPOINT='https://clarian-node-react-chat.herokuapp.com/';useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;socket=io(ENDPOINT);setRoom(room);setName(name);socket.emit('join',{name:name,room:room},function(error){if(error){alert(error);}});},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});socket.on('roomData',function(_ref2){var users=_ref2.users;setUsers(users);});return function(){socket.emit('disconnect');socket.off();};},[messages]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};console.log(message,messages);return React.createElement(\"div\",{className:\"outerContainer\"},React.createElement(\"div\",{className:\"container\"},React.createElement(InfoBar,{room:room}),React.createElement(Messages,{messages:messages,name:name}),React.createElement(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage}),React.createElement(TextContainer,{users:users})));};export default Chat;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/ChatAppFinal/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","TextContainer","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","ENDPOINT","parse","search","emit","error","alert","on","off","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer'\nlet socket;\n\nconst Chat = ({location}) => {\nconst [name, setName] = useState('');\nconst [room, setRoom] = useState('');\nconst [message, setMessage] = useState('');\nconst [messages, setMessages] = useState([]);\nconst [users, setUsers] = useState('');\nconst ENDPOINT ='https://clarian-node-react-chat.herokuapp.com/';\n\nuseEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setRoom(room);\n    setName(name)\n\n    socket.emit('join', { name, room }, (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message ]);\n    });\n\n    socket.on('roomData', ({ users }) => {\n      setUsers(users);\n    })\n\n    return () => {\n      socket.emit('disconnect');\n\n      socket.off();\n    }\n  }, [messages])\n\n \n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    console.log(message, messages);\n\n    return (\n        <div className='outerContainer'>\n            <div className='container'>\n              <InfoBar room={room} />  \n            <Messages messages={messages} name={name} />\n            \n            <Input\n            message={message}\n            setMessage={setMessage}\n            sendMessage={sendMessage}\n            />\n            <TextContainer users={users} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat "]},"metadata":{},"sourceType":"module"}