{"ast":null,"code":"import _slicedToArray from \"/Users/mauriceknecht/Desktop/ChatAppFinal/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mauriceknecht/Desktop/ChatAppFinal/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        users = _useState10[0],\n        setUsers = _useState10[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n  useEffect(() => {\n    setUsers([...users, name]);\n  });\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/ChatAppFinal/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","TextContainer","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer'\nlet socket;\n\nconst Chat = ({location}) => {\nconst [name, setName] = useState('');\nconst [room, setRoom] = useState('');\nconst [message, setMessage] = useState('');\nconst [messages, setMessages] = useState([]);\nconst [users, setUsers] = useState('');\nconst ENDPOINT ='localhost:5000';\n\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n        \n        socket.emit('join', {name, room}, ()=> {\n            \n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ENDPOINT, location.search]);\n\n    useEffect(()=> {\n        socket.on('message', (message)=> {\n        setMessages([...messages, message]);\n        })\n    }, [messages]);\n\n    useEffect(()=> {\n    setUsers([...users,name])\n    })\n \n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    console.log(message, messages);\n\n    return (\n        <div className='outerContainer'>\n            <div className='container'>\n              <InfoBar room={room} />  \n            <Messages messages={messages} name={name} />\n            \n            <Input\n            message={message}\n            setMessage={setMessage}\n            sendMessage={sendMessage}\n            />\n            <TextContainer users={users} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat "]},"metadata":{},"sourceType":"module"}